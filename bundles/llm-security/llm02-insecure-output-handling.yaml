rules:
  - id: llm02-insecure-output-handling
    message: "Insecure output handling: LLM response used directly in security-sensitive operations"
    languages: [python, javascript, typescript]
    pattern: |
      eval($LLM_RESPONSE.content)
    severity: CRITICAL
    metadata:
      cwe: "CWE-95"
      owasp-llm: "LLM02"
      category: "insecure-output-handling"
      description: "Detects direct use of LLM responses in code execution or database operations"

  - id: llm02-exec-insecure-output
    message: "Insecure output handling: exec() with LLM response"
    languages: [python]
    pattern: |
      exec($LLM_RESPONSE.content)
    severity: CRITICAL
    metadata:
      cwe: "CWE-95"
      owasp-llm: "LLM02"
      category: "insecure-output-handling"
      description: "Detects exec() calls with LLM response content"

  - id: llm02-sql-injection
    message: "Potential SQL injection: LLM response used in SQL queries"
    languages: [python, javascript, typescript]
    pattern: |
      $QUERY = "... " + $LLM_RESPONSE.content + " ..."
    severity: HIGH
    metadata:
      cwe: "CWE-89"
      owasp-llm: "LLM02"
      category: "insecure-output-handling"
      description: "Detects LLM responses concatenated into SQL queries"

  - id: llm02-unvalidated-llm-output
    message: "Unvalidated LLM output: Response used without validation or sanitization"
    languages: [python, javascript, typescript]
    pattern: |
      $HTML = $LLM_RESPONSE.content
    severity: HIGH
    metadata:
      cwe: "CWE-79"
      owasp-llm: "LLM02"
      category: "insecure-output-handling"
      description: "Detects LLM output used in HTML rendering, redirects, or file operations without validation"

  - id: llm02-llm-response-injection
    message: "Potential LLM response injection: Response content used in dynamic code"
    languages: [python, javascript, typescript]
    pattern: |
      import $LLM_RESPONSE.content
    severity: HIGH
    metadata:
      cwe: "CWE-94"
      owasp-llm: "LLM02"
      category: "insecure-output-handling"
      description: "Detects LLM responses used in dynamic imports, code execution, or unsafe parsing"
